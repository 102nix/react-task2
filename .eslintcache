[{"/home/kostya/Документы/coding/react/TS/task_2/src/redux/store.ts":"1","/home/kostya/Документы/coding/react/TS/task_2/src/components/News/News.tsx":"2","/home/kostya/Документы/coding/react/TS/task_2/src/redux/AC.ts":"3","/home/kostya/Документы/coding/react/TS/task_2/src/types/ACTypes.ts":"4","/home/kostya/Документы/coding/react/TS/task_2/src/redux/saga/index.ts":"5","/home/kostya/Документы/coding/react/TS/task_2/src/redux/saga/loginedSaga.ts":"6","/home/kostya/Документы/coding/react/TS/task_2/src/components/Login/Login.tsx":"7","/home/kostya/Документы/coding/react/TS/task_2/src/redux/saga/getNewsSaga.ts":"8","/home/kostya/Документы/coding/react/TS/task_2/src/redux/saga/getProfileSaga.ts":"9","/home/kostya/Документы/coding/react/TS/task_2/src/components/Profile/Profile.tsx":"10","/home/kostya/Документы/coding/react/TS/task_2/src/index.tsx":"11","/home/kostya/Документы/coding/react/TS/task_2/src/App.tsx":"12","/home/kostya/Документы/coding/react/TS/task_2/src/components/NavbarComponent/NavbarComponent.tsx":"13","/home/kostya/Документы/coding/react/TS/task_2/src/components/InputElement/Input.tsx":"14","/home/kostya/Документы/coding/react/TS/task_2/src/components/Tech/Tech.tsx":"15","/home/kostya/Документы/coding/react/TS/task_2/src/components/About/About.tsx":"16","/home/kostya/Документы/coding/react/TS/task_2/src/api/api.ts":"17","/home/kostya/Документы/coding/react/TS/task_2/src/reportWebVitals.ts":"18"},{"size":652,"mtime":1615229117117,"results":"19","hashOfConfig":"20"},{"size":1304,"mtime":1617480837123,"results":"21","hashOfConfig":"20"},{"size":844,"mtime":1617479112724,"results":"22","hashOfConfig":"20"},{"size":991,"mtime":1617481103155,"results":"23","hashOfConfig":"20"},{"size":284,"mtime":1615235800939,"results":"24","hashOfConfig":"20"},{"size":738,"mtime":1617480719649,"results":"25","hashOfConfig":"20"},{"size":2881,"mtime":1617480779410,"results":"26","hashOfConfig":"20"},{"size":539,"mtime":1617479163522,"results":"27","hashOfConfig":"20"},{"size":487,"mtime":1617479788426,"results":"28","hashOfConfig":"20"},{"size":2941,"mtime":1617480867327,"results":"29","hashOfConfig":"20"},{"size":766,"mtime":1607864843987,"results":"30","hashOfConfig":"20"},{"size":911,"mtime":1617480982813,"results":"31","hashOfConfig":"20"},{"size":1274,"mtime":1617480806970,"results":"32","hashOfConfig":"20"},{"size":575,"mtime":1615375341089,"results":"33","hashOfConfig":"20"},{"size":791,"mtime":1617480966713,"results":"34","hashOfConfig":"20"},{"size":2526,"mtime":1617480942437,"results":"35","hashOfConfig":"20"},{"size":520,"mtime":1607957884243,"results":"36","hashOfConfig":"20"},{"size":425,"mtime":1607863793144,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"17nxoi7",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kostya/Документы/coding/react/TS/task_2/src/redux/store.ts",[],["78","79"],"/home/kostya/Документы/coding/react/TS/task_2/src/components/News/News.tsx",["80","81"],"import React, { useEffect } from 'react'\nimport { connect, useDispatch, useSelector } from 'react-redux'\nimport './News.scss'\nimport { actions } from '../../redux/AC'\n//types:\nimport { AppStateType } from '../../redux/store'\n\nexport const News: React.FC = () => {\n\n  const dispatch = useDispatch()\n  const news = useSelector((state: AppStateType) => state.reducer.news)\n\n   useEffect(() => {\n    dispatch(actions.getNewsSaga())\n   }, [])\n   \n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"news\">\n            <div className=\"title\">Новости</div>\n            {\n              news?.data === undefined &&\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            }\n            {\n              news?.data.map(n => (\n                <div key={n.title}>\n                  <div className=\"news-title\">{n.title}</div>\n                  <div className=\"new-text\">{n.text}</div>\n                </div> )\n              )        \n            }\n            <div className=\"count-news\">\n              Всего новостей: { news?.data.length}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n","/home/kostya/Документы/coding/react/TS/task_2/src/redux/AC.ts",[],"/home/kostya/Документы/coding/react/TS/task_2/src/types/ACTypes.ts",[],"/home/kostya/Документы/coding/react/TS/task_2/src/redux/saga/index.ts",[],"/home/kostya/Документы/coding/react/TS/task_2/src/redux/saga/loginedSaga.ts",[],"/home/kostya/Документы/coding/react/TS/task_2/src/components/Login/Login.tsx",["82"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport './FormLogin.scss'\nimport { Input } from '../InputElement/Input'\nimport { actions } from '../../redux/AC'\n//types:\nimport { AppStateType } from '../../redux/store'\nimport { FormDataLogin } from '../../types/LoginFormTypes'\n\nexport const Login: React.FC = () => {\n\n  const dispatch = useDispatch()\n  const logined = useSelector((state: AppStateType) => state.reducer.logined)\n  const email = useSelector((state: AppStateType) => state.reducer.email)\n  const load = useSelector((state: AppStateType) => state.reducer.load)\n\n  useEffect(() => {\n    if (logined === 'ok') {\n      localStorage.setItem('login', logined)\n      history.push('/profile')\n    }\n  }, [logined])\n\n  const history = useHistory()\n  \n  const checkLogin = localStorage.getItem('login') || 'err'\n  if (checkLogin === 'ok') history.push('/profile')\n  \n  return (\n    <div className=\"container\">\n      <div className=\"log-content\">\n        <div className=\"row\">\n          <p className=\"col-12 title-log\">Login:</p>\n        </div>\n        <div className=\"row\">\n          <Formik\n            initialValues={{\n              email: email,\n              password: ''\n            }}\n            validationSchema={Yup.object({\n              email: Yup.string().email('Invalid email').required('Required'),\n              password: Yup.string()\n                .max(5, 'Nust be 5 characters')\n                .required('Required')\n            })}\n            onSubmit = {(dataForm: FormDataLogin): void => {\n              dispatch(actions.setLoader(true))\n              dispatch(actions.loginedSaga(dataForm))\n            }}\n          >\n            <Form className=\"col-8 log-form\">\n              <Input\n                label=\"Email\"\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n              />\n              <Input\n                label=\"Password\"\n                id=\"password\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n              />\n              <div className=\"add-action\">\n                {\n                  !load &&\n                  <button className=\"btn btn-success\">\n                    Login\n                  </button>\n                }\n                { \n                  load &&\n                  <button className=\"btn btn-primary\" type=\"button\" disabled>\n                    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                    Logining...\n                  </button>\n                } \n              </div>\n            </Form>\n          </Formik>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/home/kostya/Документы/coding/react/TS/task_2/src/redux/saga/getNewsSaga.ts",[],"/home/kostya/Документы/coding/react/TS/task_2/src/redux/saga/getProfileSaga.ts",[],"/home/kostya/Документы/coding/react/TS/task_2/src/components/Profile/Profile.tsx",["83","84"],"/home/kostya/Документы/coding/react/TS/task_2/src/index.tsx",[],["85","86"],"/home/kostya/Документы/coding/react/TS/task_2/src/App.tsx",[],"/home/kostya/Документы/coding/react/TS/task_2/src/components/NavbarComponent/NavbarComponent.tsx",[],"/home/kostya/Документы/coding/react/TS/task_2/src/components/InputElement/Input.tsx",[],"/home/kostya/Документы/coding/react/TS/task_2/src/components/Tech/Tech.tsx",[],"/home/kostya/Документы/coding/react/TS/task_2/src/components/About/About.tsx",[],"/home/kostya/Документы/coding/react/TS/task_2/src/api/api.ts",[],"/home/kostya/Документы/coding/react/TS/task_2/src/reportWebVitals.ts",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":17},{"ruleId":"95","severity":1,"message":"96","line":15,"column":7,"nodeType":"97","endLine":15,"endColumn":9,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":25,"column":6,"nodeType":"97","endLine":25,"endColumn":15,"suggestions":"100"},{"ruleId":"95","severity":1,"message":"101","line":31,"column":8,"nodeType":"97","endLine":31,"endColumn":10,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":41,"column":15,"nodeType":"105","endLine":41,"endColumn":84},{"ruleId":"87","replacedBy":"106"},{"ruleId":"89","replacedBy":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"@typescript-eslint/no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["110"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["111"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["112"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["108"],["109"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [dispatch]",{"range":"119","text":"120"},"Update the dependencies array to be: [history, logined]",{"range":"121","text":"122"},"Update the dependencies array to be: [dispatch, history]",{"range":"123","text":"124"},[434,436],"[dispatch]",[871,880],"[history, logined]",[1112,1114],"[dispatch, history]"]