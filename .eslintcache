[{"/home/kostya/Документы/coding/react/TS/task_2/src/redux/store.ts":"1","/home/kostya/Документы/coding/react/TS/task_2/src/components/News/News.tsx":"2","/home/kostya/Документы/coding/react/TS/task_2/src/redux/AC.ts":"3","/home/kostya/Документы/coding/react/TS/task_2/src/types/ACTypes.ts":"4","/home/kostya/Документы/coding/react/TS/task_2/src/redux/saga/index.ts":"5","/home/kostya/Документы/coding/react/TS/task_2/src/redux/saga/loginedSaga.ts":"6","/home/kostya/Документы/coding/react/TS/task_2/src/components/Login/Login.tsx":"7","/home/kostya/Документы/coding/react/TS/task_2/src/redux/saga/getNewsSaga.ts":"8","/home/kostya/Документы/coding/react/TS/task_2/src/redux/saga/getProfileSaga.ts":"9","/home/kostya/Документы/coding/react/TS/task_2/src/components/Profile/Profile.tsx":"10"},{"size":652,"mtime":1615229117117,"results":"11","hashOfConfig":"12"},{"size":1469,"mtime":1615229226706,"results":"13","hashOfConfig":"12"},{"size":1807,"mtime":1615235813495,"results":"14","hashOfConfig":"12"},{"size":1759,"mtime":1615235751299,"results":"15","hashOfConfig":"12"},{"size":284,"mtime":1615235800939,"results":"16","hashOfConfig":"12"},{"size":678,"mtime":1615235174909,"results":"17","hashOfConfig":"12"},{"size":1138,"mtime":1615230906297,"results":"18","hashOfConfig":"12"},{"size":531,"mtime":1615234660847,"results":"19","hashOfConfig":"12"},{"size":482,"mtime":1615235784651,"results":"20","hashOfConfig":"12"},{"size":3100,"mtime":1615235862940,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17nxoi7",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/kostya/Документы/coding/react/TS/task_2/src/redux/store.ts",[],"/home/kostya/Документы/coding/react/TS/task_2/src/components/News/News.tsx",["43"],"import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport './News.scss'\nimport { getNewsSaga } from '../../redux/AC'\n//types:\nimport { AppStateType } from '../../redux/store'\nimport { NewsStateType, NewsTypes } from '../../types/NewsTypes'\n\n const News: React.FC<NewsTypes> = props => {\n\n   useEffect(() => {\n    props.getNewsSaga()\n   }, [])\n   \n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"news\">\n            <div className=\"title\">Новости</div>\n            {\n              props.news?.data === undefined &&\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            }\n            {\n              props.news?.data.map(news => (\n                <div key={news.title}>\n                  <div className=\"news-title\">{news.title}</div>\n                  <div className=\"new-text\">{news.text}</div>\n                </div> )\n              )        \n            }\n            <div className=\"count-news\">\n              Всего новостей: { props.news?.data.length}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: AppStateType): NewsStateType => {\n  return {\n    news: state.reducer.news\n  }\n}\nconst connector = connect(mapStateToProps, { getNewsSaga })\nexport default connector(News)","/home/kostya/Документы/coding/react/TS/task_2/src/redux/AC.ts",["44","45"],"/home/kostya/Документы/coding/react/TS/task_2/src/types/ACTypes.ts",[],"/home/kostya/Документы/coding/react/TS/task_2/src/redux/saga/index.ts",[],"/home/kostya/Документы/coding/react/TS/task_2/src/redux/saga/loginedSaga.ts",[],"/home/kostya/Документы/coding/react/TS/task_2/src/components/Login/Login.tsx",[],"/home/kostya/Документы/coding/react/TS/task_2/src/redux/saga/getNewsSaga.ts",[],"/home/kostya/Документы/coding/react/TS/task_2/src/redux/saga/getProfileSaga.ts",[],"/home/kostya/Документы/coding/react/TS/task_2/src/components/Profile/Profile.tsx",["46","47"],{"ruleId":"48","severity":1,"message":"49","line":13,"column":7,"nodeType":"50","endLine":13,"endColumn":9,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":10,"nodeType":"54","messageId":"55","endLine":1,"endColumn":17},{"ruleId":"52","severity":1,"message":"56","line":15,"column":3,"nodeType":"54","messageId":"55","endLine":15,"endColumn":12},{"ruleId":"48","severity":1,"message":"57","line":28,"column":8,"nodeType":"50","endLine":28,"endColumn":10,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":38,"column":15,"nodeType":"61","endLine":38,"endColumn":84},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["62"],"@typescript-eslint/no-unused-vars","'authAPI' is defined but never used.","Identifier","unusedVar","'ThunkType' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["63"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},"Update the dependencies array to be: [props]",{"range":"68","text":"69"},"Update the dependencies array to be: [history, props]",{"range":"70","text":"71"},[367,369],"[props]",[981,983],"[history, props]"]